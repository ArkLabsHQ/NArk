@using BTCPayServer.Abstractions.Contracts
@using BTCPayServer.Services
@using NBitcoin
@using NArk
@model BTCPayServer.Plugins.ArkPayServer.Controllers.ArkStoreWalletViewModel
@inject IScopeProvider ScopeProvider
@inject BTCPayNetworkProvider NetworkProvider
@{
  
    Layout = "Views/UIStores/_LayoutWalletSetup";
    var mainnet = NetworkProvider.BTC.NBitcoinNetwork.ChainName == ChainName.Mainnet;
    var storeId = ScopeProvider.GetCurrentStoreId()!;
    ViewData.SetActivePage("Ark", "Configure Arkade Payments", "Ark");
}


<h1 class="text-center mt-n2 text-center">@ViewData["Title"]</h1>


<form asp-action="SetupStore" method="post" asp-route-storeId="@storeId">
    <div>
        <div class="form-group mb-3">
            <label asp-for="Wallet" class="form-label">Public Key</label>
            <div class="d-sm-flex">
                <input asp-for="Wallet" class="form-control" placeholder="npub.." />
            </div>
          
            
            <span asp-validation-for="Wallet" class="text-danger"></span>
            <div class="form-text">
                Enter an nsec/npub wallet key. Entering an nsec will allow BTCPay to automatically sweep invoice payments to your wallet.
            </div>
        </div>
    </div>
    
    <div class="text-start mt-4">
        @if (string.IsNullOrEmpty(Model.Wallet)){
            <button id="test" name="command" type="submit" value="create" class="btn btn-secondary text-nowrap mb-2" text-translate="true">
                Generate Wallet 
            </button>
        }
        <button id="page-primary" name="command" type="submit" value="save" class="btn btn-primary me-2">Save</button>
    </div>
</form>
     <div class="table-responsive">
            <table id="contracts" class="table table-hover">
                <thead >
                    <tr>
                        
                        <th text-translate="true" class="text-nowrap">Address</th>
                        <th text-translate="true" class="text-nowrap">Contract</th>
                        <th text-translate="true" class="text-nowrap">Active</th>
                        <th></th>
                    </tr>
                </thead>
         
                <tbody>
                    @foreach (var contract in Model.Contracts)
                    {
                        var arkContract = ArkContract.Parse(contract.Key.Type, contract.Key.ContractData);
                        <tr>

                            <td>
                                <vc:truncate-center text="@arkContract.GetArkAddress().ToString(mainnet)" classes="truncate-center-id"/>
                            </td>

                            <td>
                                <vc:truncate-center text="@arkContract.ToString()" classes="truncate-center-id"/>
                            </td>
                            <td>
                                @if (contract.Key.Active)
                                {
                                    <span class="text-success" text-translate="true">Active</span>
                                }
                                else
                                {
                                    <span class="text-danger" text-translate="true">Inactive</span>
                                }
                            </td>


                        </tr>
                        @if (contract.Value.Any())
                        {
                            <tr>
                                
                                <td colspan="3" class="border-top-0">

                                    
                                    <table class="table table-hover">
                                        <thead>
                                        <tr>
                                            <th text-translate="true">Outpoint</th>
                                            <th text-translate="true">Received Time</th>
                                            <th text-translate="true">Spent</th>
                                            
                                            <th text-translate="true" class="text-end">Amount</th>
	            
                                        </tr>
                                        </thead>
                                        <tbody>
                                        @foreach (var vtxo in contract.Value)
                                        {
                                        
                                            <tr >
                                                <td>
                                                    <vc:truncate-center text="@vtxo.TransactionId" classes="truncate-center-id"/>

                                                </td>
                                                <td>@vtxo.SeenAt.ToBrowserDate()</td>
                                                <td>@if(string.IsNullOrEmpty(vtxo.SpentByTransactionId))
                                                    {
                                                        <span class="text-success" text-translate="true">Unspent</span>
                                                    }else{
                                                        <span class="text-danger" text-translate="true">Spent</span>
                                                    }
                                                    </td>
                                                
                                                <td class="payment-value text-end text-nowrap">
                                                    <span data-sensitive class="text-success">@vtxo.Amount sats</span>
                                                </td>
                                            </tr>
                                        }
                                        </tbody>
                                    </table>
                                   

                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
     </div>
