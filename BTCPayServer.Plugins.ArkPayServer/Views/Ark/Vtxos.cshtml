@using BTCPayServer.Abstractions.Contracts
@using BTCPayServer.Abstractions.Extensions
@using BTCPayServer.Plugins.ArkPayServer
@using BTCPayServer.Plugins.ArkPayServer.Data.Entities
@using BTCPayServer.Plugins.ArkPayServer.Helpers
@using NArk.Services.Abstractions
@using NBitcoin
@model BTCPayServer.Plugins.ArkPayServer.Models.StoreVtxosViewModel
@inject IScopeProvider ScopeProvider
@inject IOperatorTermsService Terms
@inject ArkConfiguration ArkConfiguration

@{
    ViewData.SetActivePage(category: "Ark", activePage: "VTXOs", title: "Ark - VTXOs");
    var storeId = ScopeProvider.GetCurrentStoreId();
    
    var statusFilterCount = Model.Search?.ContainsFilter("status") == true ? Model.Search.GetFilterArray("status").Length : 0;
}

@functions
{
    private bool HasArrayFilter(string type, string key = null) =>
        Model.Search?.ContainsFilter(type) == true && (key is null || Model.Search.GetFilterArray(type).Contains(key));
}

@section PageHeadContent
{
    <style>
        .vtxo-details-row > td {
            padding: 1.5rem 1rem 0 2.65rem;
        }
        .dropdown > .btn {
            min-width: 7rem;
            padding-left: 1rem;
            text-align: left;
        }
        #SearchText {
            flex-shrink: 0;
            min-width: 200px;
            max-width: 300px;
        }
        @@media (max-width: 568px) {
            #SearchText {
                width: 100%;
            }
        }
    </style>
}

<div class="sticky-header">
    <h2>
        <span>@ViewData["Title"]</span>
        <a href="#descriptor" data-bs-toggle="collapse">
            <vc:icon symbol="info" />
        </a>
    </h2>
</div>

<div id="descriptor" class="collapse">
    <div class="d-flex px-4 py-4 mb-4 bg-tile rounded">
        <div class="flex-fill">
            <p text-translate="true" class="mb-2">VTXOs are Virtual Transaction Outputs - offchain Bitcoin outputs secured by Ark.</p>
            <p text-translate="true" class="mb-3">Each VTXO represents spendable Bitcoin that can be used instantly or settled onchain.</p>
        </div>
        <button type="button" class="btn-close ms-auto" data-bs-toggle="collapse" data-bs-target="#descriptor" aria-expanded="false" aria-label="Close">
            <vc:icon symbol="close" />
        </button>
    </div>
</div>

<partial name="_StatusMessage" />

<form class="d-flex flex-wrap flex-sm-nowrap align-items-center gap-3 mb-4 col-xxl-8" asp-action="Vtxos" asp-route-storeId="@Model.StoreId" method="get">
    <input asp-for="Count" type="hidden" />
    <input asp-for="SearchTerm" type="hidden" value="@(Model.Search?.WithoutSearchText() ?? "")"/>
    <input asp-for="SearchText" class="form-control" placeholder="Search TXID or Scriptâ€¦" />
    
    <div class="dropdown">
        <button id="StatusOptionsToggle" class="btn btn-secondary dropdown-toggle dropdown-toggle-custom-caret" type="button" data-bs-toggle="dropdown" aria-expanded="false">
            @if (statusFilterCount > 0)
            {
                <span>@statusFilterCount Status</span>
            }
            else
            {
                <span text-translate="true">All Status</span>
            }
        </button>
        <div class="dropdown-menu" aria-labelledby="StatusOptionsToggle">
            <a asp-action="Vtxos" asp-route-storeId="@Model.StoreId" asp-route-count="@Model.Count" asp-route-searchTerm="@(Model.Search?.Toggle("status", "unspent") ?? "")" class="dropdown-item @(HasArrayFilter("status", "unspent") ? "custom-active" : "")" text-translate="true">Unspent</a>
            <a asp-action="Vtxos" asp-route-storeId="@Model.StoreId" asp-route-count="@Model.Count" asp-route-searchTerm="@(Model.Search?.Toggle("status", "spent") ?? "")" class="dropdown-item @(HasArrayFilter("status", "spent") ? "custom-active" : "")" text-translate="true">Spent</a>
            <a asp-action="Vtxos" asp-route-storeId="@Model.StoreId" asp-route-count="@Model.Count" asp-route-searchTerm="@(Model.Search?.Toggle("status", "recoverable") ?? "")" class="dropdown-item @(HasArrayFilter("status", "recoverable") ? "custom-active" : "")" text-translate="true">Recoverable</a>
            <div class="dropdown-divider"></div>
            <a asp-action="Vtxos" asp-route-storeId="@Model.StoreId" asp-route-count="@Model.Count" asp-route-searchTerm="@(Model.Search?.Toggle("status", "spendable") ?? "")" class="dropdown-item @(HasArrayFilter("status", "spendable") ? "custom-active" : "")" text-translate="true">Spendable</a>
            <a asp-action="Vtxos" asp-route-storeId="@Model.StoreId" asp-route-count="@Model.Count" asp-route-searchTerm="@(Model.Search?.Toggle("status", "non-spendable") ?? "")" class="dropdown-item @(HasArrayFilter("status", "non-spendable") ? "custom-active" : "")" text-translate="true">Non-Spendable</a>
        </div>
    </div>
    
    @if (statusFilterCount > 0 || !string.IsNullOrEmpty(Model.SearchText))
    {
        <button id="clearAllFiltersBtn" type="button" class="btn btn-secondary" style="min-width: 7rem;" title="Clear all filters">
            <span class="align-middle" text-translate="true">Clear All</span>
        </button>
    }
</form>

<partial name="_ClearFiltersScript" />

@if (Model.Vtxos.Any())
{
    <div class="table-responsive">
        <table class="table table-hover">
            <thead>
                <tr>
                    <th class="date-col">
                        <div class="d-flex align-items-center gap-1">
                            <span text-translate="true">Seen</span>
                            <button type="button" class="btn btn-link p-0 switch-time-format only-for-js" title="Switch date format">
                                <vc:icon symbol="time" />
                            </button>
                        </div>
                    </th>
                    <th text-translate="true" class="text-nowrap">TXID</th>
                    <th text-translate="true" class="text-nowrap">Output</th>
                    <th text-translate="true" class="text-nowrap">Amount</th>
                    <th text-translate="true">Status</th>
                    <th text-translate="true">Spendable</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var vtxo in Model.Vtxos)
                {
                    var outpoint = ArkadeLinkHelper.FormatOutpoint(vtxo.TransactionId, (uint)vtxo.TransactionOutputIndex);
                    var link = ArkadeLinkHelper.GetIndexerLinkForVtxo(ArkConfiguration.ArkUri, vtxo.TransactionId, (uint)vtxo.TransactionOutputIndex);
                    var vtxoOutpoint = new OutPoint(uint256.Parse(vtxo.TransactionId), (uint)vtxo.TransactionOutputIndex);
                    var isSpendable = Model.SpendableOutpoints.Contains(vtxoOutpoint);

                    <tr id="vtxo_@outpoint.GetHashCode()">
                        <td class="align-middle date-col">@vtxo.SeenAt.ToBrowserDate()</td>
                        <td class="align-middle">
                            <vc:truncate-center link="@link" text="@vtxo.TransactionId" classes="truncate-center-id"/>
                        </td>
                        <td class="align-middle">@vtxo.TransactionOutputIndex</td>
                        <td class="align-middle">@Money.Satoshis(vtxo.Amount).ToDecimal(MoneyUnit.BTC) BTC</td>
                        <td class="align-middle">
                            @if (vtxo.SpentByTransactionId != null)
                            {
                                <span class="badge text-bg-secondary">Spent</span>
                            }
                            else if (vtxo.Recoverable)
                            {
                                <span class="badge text-bg-warning">Recoverable</span>
                            }
                            else
                            {
                                <span class="badge text-bg-success">Unspent</span>
                            }
                        </td>
                        <td class="align-middle">
                            @if (vtxo.SpentByTransactionId != null)
                            {
                                <span class="text-muted">-</span>
                            }
                            else if (isSpendable)
                            {
                                <span class="badge text-bg-success">Yes</span>
                            }
                            else
                            {
                                <span class="badge text-bg-secondary">No</span>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <vc:pager view-model="Model" />
}
else
{
    <p class="text-secondary mt-3" text-translate="true">
        There are no VTXOs matching your criteria.
    </p>
}
