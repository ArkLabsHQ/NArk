
@using BTCPayServer
@using BTCPayServer.Abstractions.Extensions
@using BTCPayServer.Data
@using BTCPayServer.Plugins.ArkPayServer
@using BTCPayServer.Plugins.ArkPayServer.PaymentHandler
@using BTCPayServer.Services.Invoices
@using BTCPayServer.Views.Stores
@model BTCPayServer.Components.MainNav.MainNavViewModel
@inject PaymentMethodHandlerDictionary HandlerDictionary 
@{
   var config =  Context.GetStoreData().GetPaymentMethodConfig<ArkadePaymentMethodConfig>(ArkadePlugin.ArkadePaymentMethodId, HandlerDictionary, true);
  var  enabled = !string.IsNullOrEmpty(config?.WalletId);
}

<li class="nav-item">
    <a asp-area="" asp-controller="Ark" asp-action="SetupStore"
       asp-route-storeId="@Model.Store.Id"
       class="nav-link @ViewData.ActivePageClass("Ark", nameof(StoreNavPages))"
       id="StoreNav-Ark">
        <span class="me-2 btcpay-status btcpay-status--@(enabled ? "enabled" : "pending")"></span>
        <span>Arkade</span>
    </a>
</li>
