@using BTCPayServer
@using BTCPayServer.Abstractions.Contracts
@using BTCPayServer.Abstractions.Extensions
@using BTCPayServer.Plugins.ArkPayServer
@using BTCPayServer.Plugins.ArkPayServer.Services
@using NArk.Services.Abstractions
@using NArk.Contracts
@using NArk.Services
@model BTCPayServer.Plugins.ArkPayServer.Models.StoreOverviewViewModel
@inject IScopeProvider ScopeProvider

@{
    ViewData.SetActivePage(category: "Ark", activePage: "StoreOverview", title: "Ark - Overview");
    var storeId = ScopeProvider.GetCurrentStoreId();
}

<partial name="_StatusMessage" />

<partial name="_ArkBalances" model="Model.Balances" />

<div class="row g-3 mb-4">
    <!-- Quick Actions Card -->
    <div class="col-xl-6">
        <div class="card shadow-sm h-100">
            <div class="card-header">
                <h5 class="mb-0">Quick Actions</h5>
            </div>
            <div class="card-body">
                <div class="row g-2">
                    <div class="col-6">
                        <button type="button" class="btn btn-outline-secondary w-100 h-100 d-flex align-items-center justify-content-center" data-bs-toggle="modal" data-bs-target="#transferModal">
                            Transfer Funds
                        </button>
                    </div>
                    <div class="col-6">
                        <form asp-action="SyncWallet" method="post" asp-route-storeId="@storeId" class="h-100">
                            <button type="submit" class="btn btn-outline-secondary w-100 h-100 d-flex align-items-center justify-content-center">
                                Sync Wallet
                            </button>
                        </form>
                    </div>
                    <div class="col-6">
                        <a asp-action="Vtxos" asp-route-storeId="@storeId" class="btn btn-outline-secondary w-100 h-100 d-flex align-items-center justify-content-center">
                            View VTXOs
                        </a>
                    </div>
                    <div class="col-6">
                        <a asp-action="Intents" asp-route-storeId="@storeId" class="btn btn-outline-secondary w-100 h-100 d-flex align-items-center justify-content-center">
                            View Intents
                        </a>
                    </div>
                    <div class="col-6">
                        <button type="button" class="btn btn-outline-secondary w-100 h-100 d-flex align-items-center justify-content-center" data-bs-toggle="modal" data-bs-target="#forceRefreshModal">
                            Force Batch
                        </button>
                    </div>
                    @if (Model.SignerAvailable && !string.IsNullOrEmpty(Model.Wallet))
                    {
                        <div class="col-6">
                            <button type="button" class="btn btn-outline-secondary w-100 h-100 d-flex align-items-center justify-content-center" data-bs-toggle="modal" data-bs-target="#showPrivateKeyModal">
                                Show Private Key
                            </button>
                        </div>
                    }
                    <div class="col-6">
                        <button type="button" class="btn btn-outline-secondary w-100 h-100 d-flex align-items-center justify-content-center" data-bs-toggle="modal" data-bs-target="#clearWalletModal">
                            Clear Wallet
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Wallet Status Card -->
    <div class="col-xl-6">
        <div class="card shadow-sm h-100">
            <div class="card-header">
                <h5 class="mb-0">Wallet Status</h5>
            </div>
            <div class="card-body">
                @if (!string.IsNullOrEmpty(Model.DefaultAddress))
                {
                    <div class="mb-3">
                        <label class="text-muted small">Default Ark Address</label>
                        <div class="input-group input-group-sm">
                            <input type="text" class="form-control form-control-sm font-monospace" value="@Model.DefaultAddress" readonly />
                            <button type="button" class="btn btn-outline-secondary btn-sm" onclick="copyAddress()">
                                📋
                            </button>
                        </div>
                    </div>
                }
                <div class="d-flex justify-content-between align-items-center mb-2">
                    <span class="text-muted">Wallet ID</span>
                    @if (!string.IsNullOrEmpty(Model.WalletId))
                    {
                        <vc:truncate-center text="@Model.WalletId" classes="truncate-center-id"/>
                    }
                </div>
                <div class="d-flex justify-content-between align-items-center mb-2">
                    <span class="text-muted">Private Keys</span>
                    @if (Model.SignerAvailable)
                    {
                        <span class="badge text-bg-success">Available</span>
                    }
                    else
                    {
                        <span class="badge text-bg-warning">Watch-Only</span>
                    }
                </div>
                <div class="d-flex justify-content-between align-items-center mb-3">
                    <span class="text-muted">Lightning</span>
                    <form asp-action="@(Model.IsLightningEnabled ? "DisableLightning" : "EnableLightning")" method="post" asp-route-storeId="@storeId" class="d-inline">
                        <button type="submit" class="btn btn-sm btn-outline-secondary">
                            @(Model.IsLightningEnabled ? "Disable" : "Enable")
                        </button>
                    </form>
                </div>
                @if (!string.IsNullOrEmpty(Model.Destination))
                {
                    <div class="d-flex justify-content-between align-items-center">
                        <span class="text-muted">Auto-Sweep</span>
                        <span class="badge text-bg-info">Enabled</span>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<!-- Wallet Configuration Card -->
<div class="card shadow-sm mb-4">
    <div class="card-header">
        <h5 class="mb-0">Wallet Configuration</h5>
    </div>
    <div class="card-body">
        <form asp-action="UpdateWalletConfig" method="post" asp-route-storeId="@storeId">
            @if (!string.IsNullOrEmpty(Model.Destination))
            {
                <div class="form-group mb-3">
                    <label class="form-label">Auto-Sweep Destination</label>
                    <div class="input-group">
                        <input type="text" class="form-control" value="@Model.Destination" readonly />
                        <button type="submit" name="command" value="clear-destination" class="btn btn-outline-danger">
                            Clear
                        </button>
                    </div>
                    <div class="form-text">VTXOs will automatically sweep to this Ark address</div>
                </div>
            }
            else
            {
                <div class="form-group mb-3">
                    <label asp-for="Destination" class="form-label">Auto-Sweep Destination (Optional)</label>
                    <input asp-for="Destination" class="form-control" placeholder="ark1..." />
                    <div class="form-text">Enter an Ark address to automatically sweep detected VTXOs</div>
                </div>
            }
            
            @if (string.IsNullOrEmpty(Model.Destination))
            {
                <button type="submit" name="command" value="save" class="btn btn-primary">Save Configuration</button>
            }
        </form>
    </div>
</div>

<!-- Transfer Modal -->
<div class="modal fade" id="transferModal" tabindex="-1" aria-labelledby="transferModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="transferModalLabel">Transfer Funds</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form asp-action="SpendOverview" method="post" asp-route-storeId="@storeId">
                <div class="modal-body">
                    <div class="form-group mb-3">
                        <label class="form-label">Destination</label>
                        <input type="text" name="Destination" class="form-control" 
                               placeholder="BIP21 URI, Lightning invoice, or Ark address..." 
                               required />
                        <div class="form-text">
                            Enter a BIP21 URI, Lightning invoice (BOLT11), or Ark address to send funds to
                        </div>
                    </div>
                    <div class="alert alert-info mb-0">
                        <strong>Available Balance:</strong> @Model.Balances.AvailableBalance sats
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Transfer</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Show Private Key Modal -->
@if (Model.SignerAvailable && !string.IsNullOrEmpty(Model.Wallet))
{
    <div class="modal fade" id="showPrivateKeyModal" tabindex="-1" aria-labelledby="showPrivateKeyModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header bg-warning">
                    <h5 class="modal-title" id="showPrivateKeyModalLabel">
                        <vc:icon symbol="warning" /> Show Private Key
                    </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="alert alert-danger">
                        <strong>Warning:</strong> Never share your private key with anyone. Anyone with access to this key can spend your funds.
                    </div>
                    <div class="form-group mb-3">
                        <label class="form-label fw-bold">Private Key (nsec)</label>
                        <div class="input-group">
                            <input type="password" id="privateKeyInput" class="form-control font-monospace" value="@Model.Wallet" readonly />
                            <button type="button" class="btn btn-outline-secondary" onclick="togglePrivateKeyVisibility()">
                                <span id="eyeIcon">👁️</span>
                            </button>
                            <button type="button" class="btn btn-outline-secondary" onclick="copyPrivateKey()">
                                📋
                            </button>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
}

<!-- Clear Wallet Modal -->
<div class="modal fade" id="clearWalletModal" tabindex="-1" aria-labelledby="clearWalletModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="clearWalletModalLabel">
                    <vc:icon symbol="warning" /> Clear Wallet Configuration
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form asp-action="ClearWallet" method="post" asp-route-storeId="@storeId">
                <div class="modal-body">
                    <div class="alert alert-warning">
                        <strong>Warning:</strong> This will remove the Ark wallet configuration from this store.
                    </div>
                    <p class="mb-3">Are you sure you want to clear the wallet configuration? This action will:</p>
                    <ul>
                        <li>Remove the Ark payment method from this store</li>
                        <li>Disable Lightning if enabled via Arkade</li>
                        <li>Not delete any funds or VTXOs (they remain on the network)</li>
                    </ul>
                    @if (Model.SignerAvailable && !string.IsNullOrEmpty(Model.Wallet))
                    {
                        <div class="alert alert-info">
                            <strong>Important:</strong> Make sure you have backed up your private key before clearing. You can view it using the "Show Private Key" button.
                        </div>
                    }
                    <p class="text-muted mb-0">You can re-import the wallet later using the same private key or wallet ID.</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-danger">Clear Wallet</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Force Refresh Modal -->
<div class="modal fade" id="forceRefreshModal" tabindex="-1" aria-labelledby="forceRefreshModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="forceRefreshModalLabel">
                    <vc:icon symbol="refresh" /> Force Batch VTXOs
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form asp-action="ForceRefresh" method="post" asp-route-storeId="@storeId">
                <div class="modal-body">
                    <div class="alert alert-info">
                        <strong>Info:</strong> This will create an intent with all your VTXOs to settle them.
                    </div>
                    <p class="mb-3">This action will:</p>
                    <ul>
                        <li>Collect all VTXOs</li>
                        <li>Create an intent that will be submitted</li>
                        <li>The intent will be processed in the next batch</li>
                        <li>Your VTXOs will be settled and consolidated</li>
                    </ul>
                    <p class="text-muted mb-0">This is useful when you have many small VTXOs or recoverable VTXOs that need to be refreshed.</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Force Batch</button>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
    function copyAddress() {
        const input = document.querySelector('input[value*="ark"]');
        if (input) {
            navigator.clipboard.writeText(input.value).then(() => {
                alert('Address copied to clipboard!');
            });
        }
    }

    function togglePrivateKeyVisibility() {
        const input = document.getElementById('privateKeyInput');
        const icon = document.getElementById('eyeIcon');
        if (input.type === 'password') {
            input.type = 'text';
            icon.textContent = '🙈';
        } else {
            input.type = 'password';
            icon.textContent = '👁️';
        }
    }

    function copyPrivateKey() {
        const input = document.getElementById('privateKeyInput');
        navigator.clipboard.writeText(input.value).then(() => {
            alert('Private key copied to clipboard!');
        });
    }
</script>